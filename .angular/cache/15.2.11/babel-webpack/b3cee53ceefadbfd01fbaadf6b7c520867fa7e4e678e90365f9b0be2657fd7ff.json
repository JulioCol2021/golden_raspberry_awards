{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction ListComponent_tr_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const movie_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(movie_r2.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(movie_r2.year);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(movie_r2.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(movie_r2.winner);\n  }\n}\nfunction ListComponent_tr_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 16);\n    i0.ɵɵtext(2, \"Nenhum filme encontrado.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport let ListComponent = /*#__PURE__*/(() => {\n  class ListComponent {\n    constructor() {\n      /**\r\n       * Lista completa de filmes recebida.\r\n       */\n      this.movies = [];\n      /**\r\n       * Lista filtrada de filmes que será exibida.\r\n       */\n      this.filteredMovies = [];\n      /**\r\n       * Página atual para a navegação.\r\n       */\n      this.currentPage = 1;\n      /**\r\n       * Total de páginas baseado nos itens filtrados.\r\n       */\n      this.totalPages = 1;\n      /**\r\n       * Número de itens exibidos por página.\r\n       */\n      this.itemsPerPage = 10;\n      /**\r\n       * Filtro aplicado pelo ano.\r\n       */\n      this.yearFilter = '';\n      /**\r\n       * Filtro aplicado pelo status de vencedor.\r\n       */\n      this.winnerFilter = '';\n    }\n    ngOnInit() {\n      /**\r\n       * Inicializa a lista de filmes com valores de exemplo.\r\n       * Em um cenário real, aqui seria carregada uma chamada de API.\r\n       */\n      this.movies = Array.from({\n        length: 50\n      }, (_, i) => ({\n        id: i + 1,\n        year: 1980 + i % 10,\n        title: `Filme ${i + 1}`,\n        winner: i % 2 === 0 ? 'Sim' : 'Não' // Alterna status de vencedor\n      }));\n      // Inicializa a lista filtrada e a paginação\n      this.filteredMovies = [...this.movies];\n      this.updatePagination();\n    }\n    /**\r\n     * Atualiza o total de páginas com base no número de itens filtrados.\r\n     */\n    updatePagination() {\n      this.totalPages = Math.ceil(this.filteredMovies.length / this.itemsPerPage);\n    }\n    /**\r\n     * Filtra os filmes com base nos campos de ano e vencedor.\r\n     */\n    filterMovies() {\n      this.filteredMovies = this.movies.filter(movie => {\n        const matchesYear = this.yearFilter ? movie.year.toString().includes(this.yearFilter) : true;\n        const matchesWinner = this.winnerFilter ? movie.winner === this.winnerFilter : true;\n        return matchesYear && matchesWinner;\n      });\n      // Reseta para a primeira página ao aplicar filtros\n      this.currentPage = 1;\n      this.updatePagination();\n    }\n    /**\r\n     * Retorna os filmes para a página atual.\r\n     * @returns Subconjunto de filmes da página atual.\r\n     */\n    getMoviesForCurrentPage() {\n      const startIndex = (this.currentPage - 1) * this.itemsPerPage;\n      const endIndex = startIndex + this.itemsPerPage;\n      return this.filteredMovies.slice(startIndex, endIndex);\n    }\n    /**\r\n     * Navega para a primeira página.\r\n     */\n    goToFirstPage() {\n      this.currentPage = 1;\n    }\n    /**\r\n     * Navega para a página anterior.\r\n     */\n    goToPreviousPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      }\n    }\n    /**\r\n     * Navega para a próxima página.\r\n     */\n    goToNextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n      }\n    }\n    /**\r\n     * Navega para a última página.\r\n     */\n    goToLastPage() {\n      this.currentPage = this.totalPages;\n    }\n  }\n  ListComponent.ɵfac = function ListComponent_Factory(t) {\n    return new (t || ListComponent)();\n  };\n  ListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ListComponent,\n    selectors: [[\"app-list\"]],\n    decls: 38,\n    vars: 10,\n    consts: [[1, \"list\", \"container-fluid\", \"mt-4\"], [1, \"mb-4\", \"text-center\"], [1, \"table\", \"table-bordered\", \"table-striped\"], [1, \"table-dark\"], [1, \"filter-container\", \"mt-2\"], [\"type\", \"text\", \"placeholder\", \"Filtrar por ano\", 1, \"form-control\", \"filter-input\", 3, \"ngModel\", \"ngModelChange\", \"input\"], [1, \"form-select\", \"filter-select\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [\"value\", \"\"], [\"value\", \"Sim\"], [\"value\", \"N\\u00E3o\"], [4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [1, \"pagination\", \"d-flex\", \"justify-content-center\", \"mt-3\"], [1, \"btn\", \"btn-outline-primary\", \"me-2\", 3, \"disabled\", \"click\"], [1, \"align-self-center\"], [1, \"btn\", \"btn-outline-primary\", \"ms-2\", 3, \"disabled\", \"click\"], [\"colspan\", \"4\", 1, \"text-center\"]],\n    template: function ListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n        i0.ɵɵtext(2, \"Lista de Filmes\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"table\", 2)(4, \"thead\", 3)(5, \"tr\")(6, \"th\");\n        i0.ɵɵtext(7, \"ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"th\");\n        i0.ɵɵtext(9, \" Ano \");\n        i0.ɵɵelementStart(10, \"div\", 4)(11, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function ListComponent_Template_input_ngModelChange_11_listener($event) {\n          return ctx.yearFilter = $event;\n        })(\"input\", function ListComponent_Template_input_input_11_listener() {\n          return ctx.filterMovies();\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(12, \"th\");\n        i0.ɵɵtext(13, \"T\\u00EDtulo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"th\");\n        i0.ɵɵtext(15, \" Vencedor? \");\n        i0.ɵɵelementStart(16, \"div\", 4)(17, \"select\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function ListComponent_Template_select_ngModelChange_17_listener($event) {\n          return ctx.winnerFilter = $event;\n        })(\"change\", function ListComponent_Template_select_change_17_listener() {\n          return ctx.filterMovies();\n        });\n        i0.ɵɵelementStart(18, \"option\", 7);\n        i0.ɵɵtext(19, \"Sim/N\\u00E3o\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"option\", 8);\n        i0.ɵɵtext(21, \"Sim\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"option\", 9);\n        i0.ɵɵtext(23, \"N\\u00E3o\");\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵelementStart(24, \"tbody\");\n        i0.ɵɵtemplate(25, ListComponent_tr_25_Template, 9, 4, \"tr\", 10);\n        i0.ɵɵtemplate(26, ListComponent_tr_26_Template, 3, 0, \"tr\", 11);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(27, \"div\", 12)(28, \"button\", 13);\n        i0.ɵɵlistener(\"click\", function ListComponent_Template_button_click_28_listener() {\n          return ctx.goToFirstPage();\n        });\n        i0.ɵɵtext(29, \" Primeira \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"button\", 13);\n        i0.ɵɵlistener(\"click\", function ListComponent_Template_button_click_30_listener() {\n          return ctx.goToPreviousPage();\n        });\n        i0.ɵɵtext(31, \" Anterior \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"span\", 14);\n        i0.ɵɵtext(33);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"button\", 15);\n        i0.ɵɵlistener(\"click\", function ListComponent_Template_button_click_34_listener() {\n          return ctx.goToNextPage();\n        });\n        i0.ɵɵtext(35, \" Pr\\u00F3xima \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"button\", 15);\n        i0.ɵɵlistener(\"click\", function ListComponent_Template_button_click_36_listener() {\n          return ctx.goToLastPage();\n        });\n        i0.ɵɵtext(37, \" \\u00DAltima \");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngModel\", ctx.yearFilter);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.winnerFilter);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngForOf\", ctx.getMoviesForCurrentPage());\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.getMoviesForCurrentPage().length === 0);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.currentPage === 1);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.currentPage === 1);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate2(\" P\\u00E1gina \", ctx.currentPage, \" de \", ctx.totalPages, \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.currentPage === ctx.totalPages);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.currentPage === ctx.totalPages);\n      }\n    },\n    dependencies: [i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgModel, i2.NgForOf, i2.NgIf],\n    styles: [\".list[_ngcontent-%COMP%]{padding:20px}h2[_ngcontent-%COMP%]{font-size:18px;color:#4d07f3}table[_ngcontent-%COMP%]{width:100%;border-collapse:collapse;margin-top:10px}th[_ngcontent-%COMP%], td[_ngcontent-%COMP%]{border:1px solid #545f02ea;padding:8px;text-align:left;font-size:14px}th[_ngcontent-%COMP%]{background-color:#9bf4fa;color:#4d07f3;font-weight:700}tr[_ngcontent-%COMP%]:nth-child(even){background-color:#ebf7de}\"]\n  });\n  return ListComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}