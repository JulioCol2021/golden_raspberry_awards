{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/movies.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nfunction DashboardComponent_tr_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const year_r6 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(year_r6.year);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(year_r6.winnerCount);\n  }\n}\nfunction DashboardComponent_tr_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const studio_r7 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(studio_r7.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(studio_r7.winCount);\n  }\n}\nfunction DashboardComponent_tr_52_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const producer_r8 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(producer_r8.producer);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(producer_r8.interval);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(producer_r8.previousWin);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(producer_r8.followingWin);\n  }\n}\nfunction DashboardComponent_tr_67_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const producer_r9 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(producer_r9.producer);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(producer_r9.interval);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(producer_r9.previousWin);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(producer_r9.followingWin);\n  }\n}\nfunction DashboardComponent_tr_91_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const movie_r10 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(movie_r10.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(movie_r10.year);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(movie_r10.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(movie_r10.studio);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(movie_r10.producers);\n  }\n}\nfunction DashboardComponent_tr_92_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 14);\n    i0.ɵɵtext(2, \"Nenhum filme encontrado para o ano selecionado.\");\n    i0.ɵɵelementEnd()();\n  }\n}\n/**\r\n * Componente responsável por exibir o dashboard com informações relacionadas aos filmes vencedores.\r\n */\nexport let DashboardComponent = /*#__PURE__*/(() => {\n  class DashboardComponent {\n    /**\r\n     * Construtor do componente que injeta o serviço responsável pelas requisições à API.\r\n     * @param moviesService Serviço que acessa a API de filmes.\r\n     */\n    constructor(moviesService) {\n      this.moviesService = moviesService;\n      /**\r\n       * Lista de anos com múltiplos vencedores.\r\n       */\n      this.yearsWithMultipleWinners = [];\n      /**\r\n       * Lista dos três principais estúdios com vencedores.\r\n       */\n      this.topStudios = [];\n      /**\r\n       * Produtores com o maior intervalo entre vitórias.\r\n       */\n      this.maxIntervalProducers = [];\n      /**\r\n       * Produtores com o menor intervalo entre vitórias.\r\n       */\n      this.minIntervalProducers = [];\n      /**\r\n       * Lista de filmes filtrados com base na busca.\r\n       */\n      this.filteredMovies = [];\n      /**\r\n       * Ano usado para busca de filmes vencedores.\r\n       */\n      this.searchYear = null;\n    }\n    /**\r\n     * Método executado ao inicializar o componente.\r\n     * Carrega os dados necessários para o dashboard.\r\n     */\n    ngOnInit() {\n      this.loadDashboardData();\n    }\n    /**\r\n     * Carrega os dados principais para o dashboard.\r\n     */\n    loadDashboardData() {\n      this.loadYearsWithMultipleWinners();\n      this.loadTopStudios();\n      this.loadMaxMinWinIntervals();\n    }\n    /**\r\n     * Carrega os anos com múltiplos vencedores da API.\r\n     */\n    loadYearsWithMultipleWinners() {\n      this.moviesService.getYearsWithMultipleWinners().subscribe(data => {\n        this.yearsWithMultipleWinners = data.years.map(yearData => ({\n          year: yearData.year,\n          winnerCount: yearData.winnerCount\n        }));\n      }, error => {\n        console.error('Erro ao carregar anos com múltiplos vencedores:', error);\n      });\n    }\n    /**\r\n     * Carrega os estúdios com o maior número de vitórias da API.\r\n     */\n    loadTopStudios() {\n      this.moviesService.getStudiosWithWinCount().subscribe(data => {\n        // Ordena os estúdios pela contagem de vitórias (maior para menor)\n        this.topStudios = data.studios.map(studio => ({\n          name: studio.name,\n          winCount: studio.winCount\n        })).sort((a, b) => b.winCount - a.winCount) // Ordenar pela contagem de vitórias\n        .slice(0, 3); // Pega apenas os 3 primeiros\n      }, error => {\n        console.error('Erro ao carregar estúdios:', error);\n      });\n    }\n    /**\r\n     * Carrega os produtores com intervalos máximos e mínimos entre vitórias da API.\r\n     */\n    loadMaxMinWinIntervals() {\n      this.moviesService.getMaxMinWinIntervalForProducers().subscribe(data => {\n        this.maxIntervalProducers = data.max.map(producer => ({\n          producer: producer.producer,\n          interval: producer.interval,\n          previousWin: producer.previousWin,\n          followingWin: producer.followingWin\n        }));\n        this.minIntervalProducers = data.min.map(producer => ({\n          producer: producer.producer,\n          interval: producer.interval,\n          previousWin: producer.previousWin,\n          followingWin: producer.followingWin\n        }));\n      }, error => {\n        console.error('Erro ao carregar intervalos de vitórias:', error);\n      });\n    }\n    /**\r\n     * Filtra os filmes vencedores com base no ano fornecido.\r\n     */\n    filterMovies() {\n      if (this.searchYear !== null && !isNaN(this.searchYear)) {\n        this.moviesService.getMoviesByYear(this.searchYear).subscribe(data => {\n          if (data && Array.isArray(data)) {\n            this.filteredMovies = data.map(movie => {\n              var _a, _b;\n              return {\n                id: movie.id,\n                year: movie.year,\n                title: movie.title,\n                studio: ((_a = movie.studios) === null || _a === void 0 ? void 0 : _a.join(', ')) || '',\n                producers: ((_b = movie.producers) === null || _b === void 0 ? void 0 : _b.join(', ')) || ''\n              };\n            });\n          } else {\n            this.filteredMovies = [];\n            console.warn('Nenhum dado retornado para o ano fornecido.');\n          }\n        }, error => {\n          console.error('Erro ao filtrar filmes por ano:', error);\n          this.filteredMovies = [];\n        });\n      } else {\n        console.warn('Ano inválido fornecido para a busca.');\n        this.filteredMovies = [];\n      }\n    }\n  }\n  DashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n    return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.MoviesService));\n  };\n  DashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardComponent,\n    selectors: [[\"app-dashboard\"]],\n    decls: 93,\n    vars: 7,\n    consts: [[1, \"btn\", \"btn-primary\"], [1, \"container\", \"mt-4\"], [1, \"row\"], [1, \"col-md-6\"], [1, \"card\", \"mb-4\"], [1, \"card-header\"], [1, \"card-body\"], [1, \"table\", \"table-bordered\"], [4, \"ngFor\", \"ngForOf\"], [1, \"input-group\", \"mb-3\"], [\"type\", \"number\", \"placeholder\", \"Pesquisar por ano\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\", \"input\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"bi\", \"bi-search\"], [4, \"ngIf\"], [\"colspan\", \"5\"]],\n    template: function DashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"button\", 0);\n        i0.ɵɵtext(1, \"Test Bootstrap\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 1)(3, \"div\", 2)(4, \"div\", 3)(5, \"div\", 4)(6, \"div\", 5);\n        i0.ɵɵtext(7, \"Lista de anos com m\\u00FAltiplos vencedores\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 6)(9, \"table\", 7)(10, \"thead\")(11, \"tr\")(12, \"th\");\n        i0.ɵɵtext(13, \"Ano\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"th\");\n        i0.ɵɵtext(15, \"Quantidade de Vencedores\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(16, \"tbody\");\n        i0.ɵɵtemplate(17, DashboardComponent_tr_17_Template, 5, 2, \"tr\", 8);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(18, \"div\", 3)(19, \"div\", 4)(20, \"div\", 5);\n        i0.ɵɵtext(21, \"Top 3 est\\u00FAdios com vencedores\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"div\", 6)(23, \"table\", 7)(24, \"thead\")(25, \"tr\")(26, \"th\");\n        i0.ɵɵtext(27, \"Nome\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"th\");\n        i0.ɵɵtext(29, \"Quantidade de Vit\\u00F3rias\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(30, \"tbody\");\n        i0.ɵɵtemplate(31, DashboardComponent_tr_31_Template, 5, 2, \"tr\", 8);\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵelementStart(32, \"div\", 2)(33, \"div\", 3)(34, \"div\", 4)(35, \"div\", 5);\n        i0.ɵɵtext(36, \"Produtores com maior e menor intervalo entre vit\\u00F3rias\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"div\", 6)(38, \"h5\");\n        i0.ɵɵtext(39, \"Maior Intervalo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(40, \"table\", 7)(41, \"thead\")(42, \"tr\")(43, \"th\");\n        i0.ɵɵtext(44, \"Produtor\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(45, \"th\");\n        i0.ɵɵtext(46, \"Intervalo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(47, \"th\");\n        i0.ɵɵtext(48, \"Ano Anterior\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(49, \"th\");\n        i0.ɵɵtext(50, \"Ano Seguinte\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(51, \"tbody\");\n        i0.ɵɵtemplate(52, DashboardComponent_tr_52_Template, 9, 4, \"tr\", 8);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(53, \"h5\");\n        i0.ɵɵtext(54, \"Menor Intervalo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(55, \"table\", 7)(56, \"thead\")(57, \"tr\")(58, \"th\");\n        i0.ɵɵtext(59, \"Produtor\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(60, \"th\");\n        i0.ɵɵtext(61, \"Intervalo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(62, \"th\");\n        i0.ɵɵtext(63, \"Ano Anterior\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(64, \"th\");\n        i0.ɵɵtext(65, \"Ano Seguinte\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(66, \"tbody\");\n        i0.ɵɵtemplate(67, DashboardComponent_tr_67_Template, 9, 4, \"tr\", 8);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(68, \"div\", 3)(69, \"div\", 4)(70, \"div\", 5);\n        i0.ɵɵtext(71, \"Lista de filmes vencedores por ano\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(72, \"div\", 6)(73, \"div\", 9)(74, \"input\", 10);\n        i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_Template_input_ngModelChange_74_listener($event) {\n          return ctx.searchYear = $event;\n        })(\"input\", function DashboardComponent_Template_input_input_74_listener() {\n          return ctx.filterMovies();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(75, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_75_listener() {\n          return ctx.filterMovies();\n        });\n        i0.ɵɵelement(76, \"i\", 12);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(77, \"table\", 7)(78, \"thead\")(79, \"tr\")(80, \"th\");\n        i0.ɵɵtext(81, \"ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(82, \"th\");\n        i0.ɵɵtext(83, \"Ano\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(84, \"th\");\n        i0.ɵɵtext(85, \"T\\u00EDtulo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(86, \"th\");\n        i0.ɵɵtext(87, \"Est\\u00FAdio\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(88, \"th\");\n        i0.ɵɵtext(89, \"Produtores\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(90, \"tbody\");\n        i0.ɵɵtemplate(91, DashboardComponent_tr_91_Template, 11, 5, \"tr\", 8);\n        i0.ɵɵtemplate(92, DashboardComponent_tr_92_Template, 3, 0, \"tr\", 13);\n        i0.ɵɵelementEnd()()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(17);\n        i0.ɵɵproperty(\"ngForOf\", ctx.yearsWithMultipleWinners);\n        i0.ɵɵadvance(14);\n        i0.ɵɵproperty(\"ngForOf\", ctx.topStudios);\n        i0.ɵɵadvance(21);\n        i0.ɵɵproperty(\"ngForOf\", ctx.maxIntervalProducers);\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"ngForOf\", ctx.minIntervalProducers);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.searchYear);\n        i0.ɵɵadvance(17);\n        i0.ɵɵproperty(\"ngForOf\", ctx.filteredMovies);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.filteredMovies.length === 0);\n      }\n    },\n    dependencies: [i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.NgControlStatus, i2.NgModel, i3.NgForOf, i3.NgIf],\n    styles: [\".container[_ngcontent-%COMP%]{max-width:1200px}.card-header[_ngcontent-%COMP%]{font-weight:700;font-size:1.2rem;background-color:#f8f9fa;border-bottom:1px solid #ddd}.table[_ngcontent-%COMP%]{margin-bottom:0}.table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{text-align:center}h5[_ngcontent-%COMP%]{margin-top:15px;font-weight:700}\"]\n  });\n  return DashboardComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}