{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/movies.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nfunction DashboardComponent_tr_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const year_r6 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(year_r6.year);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(year_r6.winnerCount);\n  }\n}\nfunction DashboardComponent_tr_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const studio_r7 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(studio_r7.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(studio_r7.winCount);\n  }\n}\nfunction DashboardComponent_tr_50_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const producer_r8 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(producer_r8.producer);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(producer_r8.interval);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(producer_r8.previousWin);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(producer_r8.followingWin);\n  }\n}\nfunction DashboardComponent_tr_65_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const producer_r9 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(producer_r9.producer);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(producer_r9.interval);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(producer_r9.previousWin);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(producer_r9.followingWin);\n  }\n}\nfunction DashboardComponent_tr_85_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const movie_r10 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(movie_r10.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(movie_r10.year);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(movie_r10.title);\n  }\n}\nfunction DashboardComponent_tr_86_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 13);\n    i0.ɵɵtext(2, \"No movies found for the selected year.\");\n    i0.ɵɵelementEnd()();\n  }\n}\n/**\r\n * Componente responsável por exibir o dashboard com informações relacionadas aos filmes vencedores.\r\n */\nexport let DashboardComponent = /*#__PURE__*/(() => {\n  class DashboardComponent {\n    constructor(moviesService) {\n      this.moviesService = moviesService;\n      this.searchYear = null;\n      this.filteredMovies = [];\n      this.yearsWithMultipleWinners = []; // Added\n      this.topStudios = []; // Added\n      this.maxIntervalProducers = []; // Added\n      this.minIntervalProducers = []; // Added\n    }\n\n    ngOnInit() {\n      console.log('DashboardComponent initialized'); // Log to confirm initialization\n      this.loadYearsWithMultipleWinners();\n      this.loadTopStudios();\n      this.loadMaxMinWinIntervals();\n    }\n    /**\r\n     * Carrega os anos com múltiplos vencedores.\r\n     */\n    loadYearsWithMultipleWinners() {\n      this.moviesService.getYearsWithMultipleWinners().subscribe(data => {\n        if (data && data.years) {\n          this.yearsWithMultipleWinners = data.years;\n        } else {\n          console.error('Invalid data structure for years with multiple winners:', data);\n        }\n      }, error => console.error('Error fetching years with multiple winners:', error));\n    }\n    /**\r\n     * Carrega os estúdios com mais vitórias.\r\n     */\n    loadTopStudios() {\n      this.moviesService.getStudiosWithWinCount().subscribe(data => {\n        if (data && data.studios) {\n          this.topStudios = data.studios;\n        } else {\n          console.error('Invalid data structure for top studios:', data);\n        }\n      }, error => console.error('Error fetching top studios:', error));\n    }\n    /**\r\n     * Carrega os intervalos máximos e mínimos de vitórias dos produtores.\r\n     */\n    loadMaxMinWinIntervals() {\n      this.moviesService.getMaxMinWinIntervalForProducers().subscribe(data => {\n        if (data && data.max && data.min) {\n          this.maxIntervalProducers = data.max;\n          this.minIntervalProducers = data.min;\n        } else {\n          console.error('Invalid data structure for max-min win intervals:', data);\n        }\n      }, error => console.error('Error fetching max-min win intervals:', error));\n    }\n    /**\r\n     * Filtra os filmes pelo ano fornecido.\r\n     */\n    filterMovies() {\n      console.log('filterMovies called with year:', this.searchYear); // Log the year parameter\n      if (this.searchYear !== null && this.searchYear !== undefined) {\n        console.log('Making API call to fetch movies for year:', this.searchYear);\n        this.moviesService.getMoviesByYear(this.searchYear).subscribe(data => {\n          console.log('API Response:', data); // Log the response from the API\n          if (data && data.content) {\n            this.filteredMovies = data.content.map(movie => ({\n              id: movie.id,\n              year: movie.year,\n              title: movie.title,\n              studio: movie.studios ? movie.studios.join(', ') : 'N/A',\n              producers: movie.producers ? movie.producers.join(', ') : 'N/A'\n            }));\n          } else {\n            console.error('Unexpected API response structure:', data);\n            this.filteredMovies = [];\n          }\n        }, error => {\n          console.error('Error fetching movies by year:', error);\n          this.filteredMovies = [];\n        });\n      } else {\n        console.warn('No valid year provided. Please enter a valid year.');\n        this.filteredMovies = [];\n      }\n    }\n  }\n  DashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n    return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.MoviesService));\n  };\n  DashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardComponent,\n    selectors: [[\"app-dashboard\"]],\n    decls: 87,\n    vars: 7,\n    consts: [[1, \"container\", \"mt-4\"], [1, \"row\"], [1, \"col-md-6\"], [1, \"card\", \"mb-4\"], [1, \"card-header\"], [1, \"card-body\"], [1, \"table\", \"table-bordered\"], [4, \"ngFor\", \"ngForOf\"], [1, \"input-group\", \"mb-3\"], [\"type\", \"number\", \"placeholder\", \"Search by year\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"bi\", \"bi-search\"], [4, \"ngIf\"], [\"colspan\", \"3\", 1, \"text-center\", \"text-warning\"]],\n    template: function DashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4);\n        i0.ɵɵtext(5, \"List years with multiple winners\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 5)(7, \"table\", 6)(8, \"thead\")(9, \"tr\")(10, \"th\");\n        i0.ɵɵtext(11, \"Year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"th\");\n        i0.ɵɵtext(13, \"Win Count\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(14, \"tbody\");\n        i0.ɵɵtemplate(15, DashboardComponent_tr_15_Template, 5, 2, \"tr\", 7);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(16, \"div\", 2)(17, \"div\", 3)(18, \"div\", 4);\n        i0.ɵɵtext(19, \"Top 3 studios with winners\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 5)(21, \"table\", 6)(22, \"thead\")(23, \"tr\")(24, \"th\");\n        i0.ɵɵtext(25, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"th\");\n        i0.ɵɵtext(27, \"Win Count\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(28, \"tbody\");\n        i0.ɵɵtemplate(29, DashboardComponent_tr_29_Template, 5, 2, \"tr\", 7);\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵelementStart(30, \"div\", 1)(31, \"div\", 2)(32, \"div\", 3)(33, \"div\", 4);\n        i0.ɵɵtext(34, \"Producers with longest and shortest interval between wins\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"div\", 5)(36, \"h5\");\n        i0.ɵɵtext(37, \"Maximum\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"table\", 6)(39, \"thead\")(40, \"tr\")(41, \"th\");\n        i0.ɵɵtext(42, \"Producer\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(43, \"th\");\n        i0.ɵɵtext(44, \"Interval\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(45, \"th\");\n        i0.ɵɵtext(46, \"Previous Year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(47, \"th\");\n        i0.ɵɵtext(48, \"Following Year\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(49, \"tbody\");\n        i0.ɵɵtemplate(50, DashboardComponent_tr_50_Template, 9, 4, \"tr\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(51, \"h5\");\n        i0.ɵɵtext(52, \"Minimum\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(53, \"table\", 6)(54, \"thead\")(55, \"tr\")(56, \"th\");\n        i0.ɵɵtext(57, \"Producer\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(58, \"th\");\n        i0.ɵɵtext(59, \"Interval\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(60, \"th\");\n        i0.ɵɵtext(61, \"Previous Year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(62, \"th\");\n        i0.ɵɵtext(63, \"Following Year\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(64, \"tbody\");\n        i0.ɵɵtemplate(65, DashboardComponent_tr_65_Template, 9, 4, \"tr\", 7);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(66, \"div\", 2)(67, \"div\", 3)(68, \"div\", 4);\n        i0.ɵɵtext(69, \"List movie winners by year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(70, \"div\", 5)(71, \"div\", 8)(72, \"input\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_Template_input_ngModelChange_72_listener($event) {\n          return ctx.searchYear = $event;\n        })(\"change\", function DashboardComponent_Template_input_change_72_listener() {\n          return ctx.filterMovies();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(73, \"button\", 10);\n        i0.ɵɵlistener(\"click\", function DashboardComponent_Template_button_click_73_listener() {\n          return ctx.filterMovies();\n        });\n        i0.ɵɵelement(74, \"i\", 11);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(75, \"table\", 6)(76, \"thead\")(77, \"tr\")(78, \"th\");\n        i0.ɵɵtext(79, \"Id\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(80, \"th\");\n        i0.ɵɵtext(81, \"Year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(82, \"th\");\n        i0.ɵɵtext(83, \"Title\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(84, \"tbody\");\n        i0.ɵɵtemplate(85, DashboardComponent_tr_85_Template, 7, 3, \"tr\", 7);\n        i0.ɵɵtemplate(86, DashboardComponent_tr_86_Template, 3, 0, \"tr\", 12);\n        i0.ɵɵelementEnd()()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"ngForOf\", ctx.yearsWithMultipleWinners);\n        i0.ɵɵadvance(14);\n        i0.ɵɵproperty(\"ngForOf\", ctx.topStudios);\n        i0.ɵɵadvance(21);\n        i0.ɵɵproperty(\"ngForOf\", ctx.maxIntervalProducers);\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"ngForOf\", ctx.minIntervalProducers);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.searchYear);\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngForOf\", ctx.filteredMovies);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.filteredMovies.length === 0 && ctx.searchYear);\n      }\n    },\n    dependencies: [i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.NgControlStatus, i2.NgModel, i3.NgForOf, i3.NgIf],\n    styles: [\"body[_ngcontent-%COMP%]{font-family:Roboto,Arial,sans-serif;background-color:#f4f6f8;color:#333;margin:0;padding:0}.container[_ngcontent-%COMP%]{max-width:1200px;margin:20px auto;padding:20px}.dashboard-grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:1fr 1fr;grid-template-rows:auto auto;gap:20px}.section[_ngcontent-%COMP%]{background-color:#fff;border-radius:8px;box-shadow:0 4px 10px #0000001a;padding:20px;border-left:5px solid #007bff}.section-title[_ngcontent-%COMP%]{font-size:1.5rem;font-weight:700;margin-bottom:20px;color:#007bff;border-bottom:2px solid #ddd;padding-bottom:5px;text-align:center}.table[_ngcontent-%COMP%]{width:100%;border-collapse:collapse;margin-bottom:20px}.table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{text-align:center;padding:12px 15px;border:1px solid #ddd}.table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{background-color:#007bff;color:#fff;text-transform:uppercase}.table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-child(odd){background-color:#f9f9f9}.table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover{background-color:#f1f1f1}.list-container[_ngcontent-%COMP%]{margin-top:20px}.list-header[_ngcontent-%COMP%]{font-size:1.5rem;font-weight:700;color:#007bff;margin-bottom:15px;text-align:center}.pagination-buttons[_ngcontent-%COMP%]{display:flex;justify-content:center;margin-top:20px}.pagination-buttons[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{background-color:#007bff;color:#fff;border:none;padding:10px 15px;margin:0 5px;cursor:pointer;border-radius:4px}.pagination-buttons[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{background-color:#0056b3}@media (max-width: 768px){.dashboard-grid[_ngcontent-%COMP%]{grid-template-columns:1fr;gap:10px}.table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{font-size:.9rem;padding:10px}}\"]\n  });\n  return DashboardComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}